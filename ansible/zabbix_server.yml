- name: Установка Zabbix сервера
  hosts: zabbix
  become: yes

  vars:
    zabbix_major_version: "6.0"          # LTS
    zbx_codename: "focal"                # Ubuntu 20.04
    zabbix_db_name: zabbix
    zabbix_db_user: zabbix
    zabbix_db_password: "ZabbixP@ssw0rd!"   # поменяй при желании

  tasks:
    - name: Установить базовые зависимости для репозиториев
      ansible.builtin.apt:
        name:
          - gnupg
          - ca-certificates
          - apt-transport-https
        state: present
        update_cache: yes

    - name: Добавить GPG-ключ репозитория Zabbix
      ansible.builtin.apt_key:
        url: https://repo.zabbix.com/zabbix-official-repo.key
        state: present

    - name: Подключить репозиторий Zabbix
      ansible.builtin.apt_repository:
        repo: "deb https://repo.zabbix.com/zabbix/{{ zabbix_major_version }}/ubuntu {{ zbx_codename }} main"
        state: present
        filename: zabbix

    - name: Обновить cache apt после добавления репозитория
      ansible.builtin.apt:
        update_cache: yes

    - name: Установить Zabbix server + web (Apache) и агент
      ansible.builtin.apt:
        name:
          - zabbix-server-mysql
          - zabbix-frontend-php
          - zabbix-apache-conf
          - zabbix-sql-scripts
          - zabbix-agent
          - mysql-client
        state: present

    # === УСТАНАВЛИВАЕМ MySQL 8.0 ВМЕСТО MariaDB ===
    - name: Install MySQL server and python driver
      ansible.builtin.apt:
        name:
          - mysql-server
          - python3-pymysql
        state: present
        update_cache: yes

    - name: Ensure MySQL running and enabled
      ansible.builtin.systemd:
        name: mysql
        state: started
        enabled: yes

    # === СОЗДАЁМ БД И ПОЛЬЗОВАТЕЛЯ ZABBIX ЧЕРЕЗ UNIX SOCKET ===
    - name: Create Zabbix database
      community.mysql.mysql_db:
        name: "{{ zabbix_db_name }}"
        state: present
        encoding: utf8mb4
        collation: utf8mb4_bin
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create Zabbix DB user with privileges
      community.mysql.mysql_user:
        name: "{{ zabbix_db_user }}"
        password: "{{ zabbix_db_password }}"
        host: "localhost"
        priv: "{{ zabbix_db_name }}.*:ALL"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock

    # === Разрешаем импорт функций без SUPER при включённом бинарном логе ===
    - name: Configure MySQL to trust function creators (persist)
      ansible.builtin.copy:
        dest: /etc/mysql/conf.d/zabbix.cnf
        owner: root
        group: root
        mode: '0644'
        content: |
          [mysqld]
          log_bin_trust_function_creators = 1
      notify: Restart mysql

    - name: Ensure MySQL restarted to apply conf
      ansible.builtin.meta: flush_handlers

    - name: Wait for MySQL socket after restart
      ansible.builtin.wait_for:
        path: /var/run/mysqld/mysqld.sock
        state: present
        timeout: 60

    # === ИМПОРТ СХЕМЫ ZABBIX (однократно) ===
    - name: Import Zabbix schema if not imported yet
      ansible.builtin.command: >
        bash -lc "zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz
        | mysql --protocol=socket -S /var/run/mysqld/mysqld.sock
        -u{{ zabbix_db_user }} -p'{{ zabbix_db_password }}' {{ zabbix_db_name }}"
      args:
        creates: /var/lib/mysql/{{ zabbix_db_name }}/users.ibd
      changed_when: true

    # === НАСТРОЙКИ СЕРВЕРА ZABBIX ===
    - name: Прописать DBName/DBUser/DBPassword в /etc/zabbix/zabbix_server.conf
      ansible.builtin.lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        regexp: '^#?\s*{{ item.key }}='
        line: "{{ item.key }}={{ item.val }}"
        create: yes
      loop:
        - { key: 'DBName',     val: '{{ zabbix_db_name }}' }
        - { key: 'DBUser',     val: '{{ zabbix_db_user }}' }
        - { key: 'DBPassword', val: '{{ zabbix_db_password }}' }
      notify: Restart zabbix-server

    # === ВРЕМЕННАЯ ЗОНА ДЛЯ PHP/Apache (иначе ругается фронт) ===
    - name: Установить таймзону в /etc/zabbix/apache.conf
      ansible.builtin.lineinfile:
        path: /etc/zabbix/apache.conf
        regexp: '^#?\s*php_value\s+date.timezone'
        line: 'php_value date.timezone Europe/Amsterdam'
        create: yes
      notify: Reload apache
    # === PHP драйвер и готовый конфиг фронтенда, чтобы пропустить визард ===
    - name: Ensure php-mysql installed for Zabbix frontend
      ansible.builtin.apt:
        name: php-mysql
        state: present
        update_cache: yes

    - name: Drop preconfigured /etc/zabbix/web/zabbix.conf.php
      ansible.builtin.copy:
        dest: /etc/zabbix/web/zabbix.conf.php
        owner: www-data
        group: www-data
        mode: '0640'
        content: |
          <?php
          $DB['TYPE']     = 'MYSQL';
          $DB['SERVER']   = 'localhost';
          $DB['PORT']     = '0';
          $DB['DATABASE'] = '{{ zabbix_db_name }}';
          $DB['USER']     = '{{ zabbix_db_user }}';
          $DB['PASSWORD'] = '{{ zabbix_db_password }}';
          $DB['SCHEMA']   = '';
          $DB['ENCRYPTION'] = false;
          $DB['KEY_FILE']   = '';
          $DB['CERT_FILE']  = '';
          $DB['CA_FILE']    = '';
          $DB['VERIFY_HOST'] = false;
          $DB['CIPHER_LIST'] = '';
          $DB['DOUBLE_IEEE754'] = true;

          $ZBX_SERVER      = 'localhost';
          $ZBX_SERVER_PORT = '10051';
          $ZBX_SERVER_NAME = 'Zabbix Server';

          $IMAGE_FORMAT_DEFAULT = IMAGE_FORMAT_PNG;
      notify: Reload apache


  handlers:
    - name: Restart zabbix-server
      ansible.builtin.systemd:
        name: zabbix-server
        state: restarted
        enabled: yes

    - name: Reload apache
      ansible.builtin.systemd:
        name: apache2
        state: reloaded
        enabled: yes

    - name: Restart mysql
      ansible.builtin.systemd:
        name: mysql
        state: restarted
        enabled: yes